name: iOS Build - Final Fix for Installation

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-final:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        cache: true
        
    - name: Setup CocoaPods
      run: |
        sudo gem install cocoapods
        pod setup
        
    - name: Clean everything
      run: |
        flutter clean
        rm -rf ios/Pods
        rm -rf ios/Podfile.lock
        rm -rf build/
        rm -rf ios/build/
        
    - name: Get dependencies
      run: |
        flutter pub get
        
    - name: Generate Flutter iOS files
      run: |
        flutter precache --ios
        
    - name: Install iOS dependencies
      run: |
        cd ios
        pod install --repo-update --verbose
        cd ..
        
    - name: Verify project configuration
      run: |
        echo "Checking Bundle ID consistency..."
        grep -r "com.ppapikey.dev" ios/Runner/
        echo "Checking deployment target..."
        grep -r "IPHONEOS_DEPLOYMENT_TARGET" ios/Runner/
        
    - name: Build iOS for installation (Release)
      run: |
        flutter build ios --release --no-codesign --no-pub --verbose
        
    - name: Verify app structure
      run: |
        echo "Checking app structure..."
        ls -la build/ios/iphoneos/
        ls -la build/ios/iphoneos/Runner.app/
        echo "Checking Info.plist..."
        plutil -p build/ios/iphoneos/Runner.app/Info.plist | grep -E "(CFBundleIdentifier|CFBundleDisplayName|CFBundleVersion)"
        
    - name: Create proper IPA structure
      run: |
        cd build/ios/iphoneos
        
        # Remove any existing Payload
        rm -rf Payload
        
        # Create Payload directory
        mkdir -p Payload
        
        # Copy Runner.app to Payload
        cp -r Runner.app Payload/
        
        # Verify structure
        echo "Payload structure:"
        ls -la Payload/
        echo "App structure:"
        ls -la Payload/Runner.app/
        
        # Create IPA with proper compression and exclude unnecessary files
        zip -r ../../../PPAPIKey_Mobile_Final.ipa Payload/ \
          -x "*.DS_Store" "*/.*" "*/__pycache__/*" "*/node_modules/*" "*.log"
        
        cd ../../..
        
    - name: Verify IPA structure
      run: |
        echo "IPA contents:"
        unzip -l PPAPIKey_Mobile_Final.ipa
        echo "IPA file size:"
        ls -lh PPAPIKey_Mobile_Final.ipa
        
        # Check if IPA is valid
        if [ -f "PPAPIKey_Mobile_Final.ipa" ]; then
          echo "✅ IPA created successfully"
        else
          echo "❌ IPA creation failed"
          exit 1
        fi
        
    - name: Upload final IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-app-final-installable
        path: PPAPIKey_Mobile_Final.ipa
        retention-days: 30
        
    - name: Create installation guide
      run: |
        cat > INSTALLATION_GUIDE.md << 'EOF'
        # PPAPIKey Mobile - Installation Guide
        
        ## Requirements
        - iOS 13.0 or later
        - Valid Apple Developer Account
        - Device registered in provisioning profile
        
        ## Installation Methods
        
        ### Method 1: Using AltStore (Recommended)
        1. Install AltStore on your Mac/PC
        2. Download the IPA from GitHub Actions artifacts
        3. Connect your iOS device
        4. Drag and drop IPA to AltStore
        5. Install on device
        
        ### Method 2: Using Sideloadly
        1. Download Sideloadly
        2. Download the IPA from GitHub Actions artifacts
        3. Connect your iOS device
        4. Load IPA in Sideloadly
        5. Enter your Apple ID credentials
        6. Install on device
        
        ### Method 3: Using Xcode
        1. Download Xcode
        2. Download the IPA from GitHub Actions artifacts
        3. Extract IPA contents
        4. Import Runner.app into Xcode
        5. Build and run on device
        
        ## Troubleshooting
        
        ### "Cannot Install" Error
        - Ensure device is registered in Apple Developer Portal
        - Check Bundle ID matches provisioning profile
        - Verify certificate is valid
        
        ### "Untrusted Developer" Error
        - Go to Settings > General > Device Management
        - Trust the developer certificate
        
        ## Bundle Information
        - Bundle ID: com.ppapikey.dev
        - Version: 1.2.2
        - Build: 1
        EOF
        
    - name: Upload installation guide
      uses: actions/upload-artifact@v4
      with:
        name: installation-guide
        path: INSTALLATION_GUIDE.md
        retention-days: 30
