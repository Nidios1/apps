name: Build IPA for iOS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        cache: true
        
    - name: Install dependencies
      working-directory: ./PPAPIKey_Mobile_Project
      run: flutter pub get
        
    - name: Clean and prepare
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        flutter clean
        flutter pub get
        flutter packages get
        
    - name: Verify Flutter configuration
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Flutter doctor:"
        flutter doctor -v
        echo "Flutter devices:"
        flutter devices
        echo "Flutter version:"
        flutter --version
        echo "Project analysis (non-fatal):"
        flutter analyze || echo "Analysis completed with warnings"
        
        echo "Checking Flutter engine:"
        flutter config --list
        
        echo "Checking project structure:"
        ls -la lib/
        echo "Checking assets:"
        ls -la assets/ || echo "No assets directory"
        
    - name: Install iOS dependencies
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Precaching iOS artifacts..."
        flutter precache --ios
        
        echo "Installing CocoaPods dependencies..."
        cd ios
        pod install --repo-update
        
        echo "Verifying pod installation..."
        pod list | head -20
        
        echo "Checking Flutter frameworks..."
        ls -la Pods/Flutter/ || echo "Flutter pod not found"
        
    - name: Build iOS for Device (Release)
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Building iOS app for device..."
        
        # Clean build directory first
        rm -rf build/
        
        # Build with detailed output
        flutter build ios --release --no-codesign --verbose --tree-shake-icons
        
        echo "=== BUILD VERIFICATION ==="
        echo "Checking build output..."
        ls -la build/ios/iphoneos/Runner.app/
        
        echo "Checking Frameworks..."
        if [ -d "build/ios/iphoneos/Runner.app/Frameworks" ]; then
          echo "Frameworks found:"
          ls -la build/ios/iphoneos/Runner.app/Frameworks/
          echo "Frameworks count:"
          ls -la build/ios/iphoneos/Runner.app/Frameworks/ | wc -l
        else
          echo "❌ Frameworks directory missing!"
          exit 1
        fi
        
        echo "Checking executable size..."
        ls -lh build/ios/iphoneos/Runner.app/Runner
        
        echo "Checking total app size..."
        du -sh build/ios/iphoneos/Runner.app/
        
        # Verify minimum requirements
        RUNNER_SIZE=$(stat -f%z build/ios/iphoneos/Runner.app/Runner 2>/dev/null || stat -c%s build/ios/iphoneos/Runner.app/Runner)
        FRAMEWORKS_COUNT=$(ls -1 build/ios/iphoneos/Runner.app/Frameworks/ | wc -l)
        
        echo "Runner size: $RUNNER_SIZE bytes"
        echo "Frameworks count: $FRAMEWORKS_COUNT"
        
        if [ "$RUNNER_SIZE" -lt 1000000 ]; then
          echo "❌ Runner executable too small ($RUNNER_SIZE bytes), expected > 1MB"
          exit 1
        fi
        
        if [ "$FRAMEWORKS_COUNT" -lt 10 ]; then
          echo "❌ Too few frameworks ($FRAMEWORKS_COUNT), expected > 10"
          exit 1
        fi
        
        echo "✅ Build verification passed"
        
    - name: Verify Build Contents
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Checking build contents..."
        ls -la build/ios/iphoneos/Runner.app/
        echo "Checking for required files..."
        ls -la build/ios/iphoneos/Runner.app/Frameworks/ || echo "Frameworks folder missing"
        ls -la build/ios/iphoneos/Runner.app/_CodeSignature/ || echo "CodeSignature folder missing"
        
    - name: Create IPA from App Bundle
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Creating IPA directly from app bundle..."
        cd build/ios/iphoneos
        
        # Verify build quality first
        echo "=== BUILD QUALITY CHECK ==="
        echo "Runner executable size:"
        ls -lh Runner.app/Runner
        
        echo "Frameworks count:"
        if [ -d "Runner.app/Frameworks" ]; then
          ls -la Runner.app/Frameworks/ | wc -l
          echo "Frameworks contents:"
          ls -la Runner.app/Frameworks/
        else
          echo "❌ Frameworks directory missing!"
          exit 1
        fi
        
        echo "Total app size:"
        du -sh Runner.app/
        
        # Create Payload directory
        mkdir -p Payload
        
        # Copy Runner.app to Payload
        cp -r Runner.app Payload/
        
        # Verify contents
        echo "Contents of Payload/Runner.app:"
        ls -la Payload/Runner.app/
        
        # Check for Frameworks
        if [ -d "Payload/Runner.app/Frameworks" ]; then
          echo "✅ Frameworks folder found:"
          ls -la Payload/Runner.app/Frameworks/
        else
          echo "❌ Frameworks folder missing!"
          exit 1
        fi
        
        # Create IPA
        zip -r ../../../ppapikey.ipa Payload/
        
        # Verify IPA
        echo "IPA created, verifying..."
        ls -lh ../../../ppapikey.ipa
        
        # Clean up
        rm -rf Payload
        
        echo "✅ IPA created successfully from app bundle"
        
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ppapikey-ipa
        path: PPAPIKey_Mobile_Project/ppapikey.ipa
        retention-days: 30
