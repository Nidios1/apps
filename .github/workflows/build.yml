name: Build IPA for iOS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        cache: true
        
    - name: Install dependencies
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        flutter pub get
        
        # Install iOS dependencies - REQUIRED for frameworks
        cd ios
        
        # Clean previous installation
        rm -rf Pods/ Podfile.lock
        
        # Install pods - this creates all the frameworks
        pod install --verbose || {
          echo "Pod install failed, trying alternative approach..."
          
          # Try with repo update
          pod install --repo-update --verbose || {
            echo "Still failing, trying without repo update..."
            pod install --no-repo-update --verbose || {
              echo "All pod install attempts failed, but continuing..."
            }
          }
        }
        
        # Verify frameworks were created
        echo "=== FRAMEWORKS VERIFICATION ==="
        echo "Frameworks created:"
        find Pods -name "*.framework" | head -20
        echo "Frameworks count:"
        find Pods -name "*.framework" | wc -l
        
        cd ..
        
    - name: Clean and prepare
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        flutter clean
        flutter pub get
        flutter packages get
        
    - name: Verify Flutter configuration
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Flutter doctor:"
        flutter doctor -v
        echo "Flutter devices:"
        flutter devices
        echo "Flutter version:"
        flutter --version
        echo "Project analysis (non-fatal):"
        flutter analyze || echo "Analysis completed with warnings"
        
        echo "Checking Flutter engine:"
        flutter config --list
        
        echo "Checking project structure:"
        ls -la lib/
        echo "Checking assets:"
        ls -la assets/ || echo "No assets directory"
        
    - name: Pre-build verification
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "=== PRE-BUILD VERIFICATION ==="
        echo "Checking Flutter configuration..."
        flutter config --list
        
        echo "Checking project structure..."
        ls -la lib/
        echo "Checking pubspec.yaml..."
        head -20 pubspec.yaml
        
        echo "Checking iOS configuration..."
        ls -la ios/Runner/
        
        echo "Checking Flutter dependencies..."
        flutter pub deps --style=tree | head -30
        
    - name: Build iOS for Device (Release)
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Building iOS app without CocoaPods..."
        
        # Build with Flutter handling frameworks automatically
        flutter build ios --release --no-codesign --verbose --tree-shake-icons
        
        echo "Build completed successfully"
        
        # Verify build contents
        echo "=== BUILD VERIFICATION ==="
        echo "Checking Runner.app contents..."
        ls -la build/ios/iphoneos/Runner.app/
        
        echo "Checking Runner executable size..."
        ls -lh build/ios/iphoneos/Runner.app/Runner
        
        echo "Checking Frameworks folder..."
        if [ -d "build/ios/iphoneos/Runner.app/Frameworks" ]; then
          echo "Frameworks found:"
          ls -la build/ios/iphoneos/Runner.app/Frameworks/
          echo "Frameworks count:"
          ls -la build/ios/iphoneos/Runner.app/Frameworks/ | wc -l
          
          echo "Expected frameworks (should be 12 like original IPA):"
          echo "- Flutter.framework"
          echo "- App.framework" 
          echo "- audio_session.framework"
          echo "- flutter_app_badger.framework"
          echo "- flutter_local_notifications.framework"
          echo "- image_picker_ios.framework"
          echo "- just_audio.framework"
          echo "- package_info_plus.framework"
          echo "- path_provider_foundation.framework"
          echo "- shared_preferences_foundation.framework"
          echo "- sqflite_darwin.framework"
          echo "- url_launcher_ios.framework"
          
          echo "Actual frameworks:"
          ls -la build/ios/iphoneos/Runner.app/Frameworks/ | grep "\.framework"
          
          # Check if we have the expected number of frameworks
          FRAMEWORK_COUNT=$(ls -la build/ios/iphoneos/Runner.app/Frameworks/ | grep "\.framework" | wc -l)
          echo "Framework count: $FRAMEWORK_COUNT"
          
          if [ "$FRAMEWORK_COUNT" -lt 10 ]; then
            echo "❌ Too few frameworks ($FRAMEWORK_COUNT), expected 12"
            echo "This means CocoaPods didn't install properly or Flutter build failed"
            exit 1
          else
            echo "✅ Sufficient frameworks found ($FRAMEWORK_COUNT)"
          fi
        else
          echo "❌ Frameworks directory missing!"
          echo "This means Flutter build failed or CocoaPods didn't install"
          exit 1
        fi
        
        echo "Checking Assets.car..."
        ls -lh build/ios/iphoneos/Runner.app/Assets.car || echo "Assets.car missing"
        
        echo "Checking App icons..."
        ls -la build/ios/iphoneos/Runner.app/AppIcon*.png || echo "App icons missing"
        
    - name: Verify Build Contents
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Checking build contents..."
        ls -la build/ios/iphoneos/Runner.app/
        echo "Checking for required files..."
        ls -la build/ios/iphoneos/Runner.app/Frameworks/ || echo "Frameworks folder missing"
        ls -la build/ios/iphoneos/Runner.app/_CodeSignature/ || echo "CodeSignature folder missing"
        
    - name: Create IPA from App Bundle
      working-directory: ./PPAPIKey_Mobile_Project
      run: |
        echo "Creating IPA to match original structure..."
        cd build/ios/iphoneos
        
        # Verify we have all required files like original IPA
        echo "=== PRE-IPA VERIFICATION ==="
        echo "Runner.app contents:"
        ls -la Runner.app/
        
        echo "Frameworks:"
        ls -la Runner.app/Frameworks/ || echo "No Frameworks"
        
        echo "CodeSignature:"
        ls -la Runner.app/_CodeSignature/ || echo "No CodeSignature"
        
        echo "Assets:"
        ls -la Runner.app/Assets.car || echo "No Assets.car"
        
        # Check for required files for installation
        echo "=== INSTALLATION REQUIREMENTS CHECK ==="
        if [ -f "Runner.app/Info.plist" ]; then
          echo "✅ Info.plist present"
        else
          echo "❌ Info.plist missing"
          exit 1
        fi
        
        if [ -f "Runner.app/Runner" ]; then
          echo "✅ Runner executable present"
        else
          echo "❌ Runner executable missing"
          exit 1
        fi
        
        if [ -d "Runner.app/Frameworks" ]; then
          echo "✅ Frameworks directory present"
        else
          echo "❌ Frameworks directory missing"
          exit 1
        fi
        
        # Create Payload directory (same as original IPA structure)
        mkdir -p Payload
        
        # Copy Runner.app to Payload (preserving all files)
        cp -r Runner.app Payload/
        
        # Verify Payload contents
        echo "Payload contents:"
        ls -la Payload/Runner.app/
        
        # Create IPA with same structure as original
        zip -r ../../../ppapikey.ipa Payload/
        
        # Verify IPA was created
        echo "IPA created:"
        ls -lh ../../../ppapikey.ipa
        
        # Clean up
        rm -rf Payload
        
        echo "✅ IPA created successfully with same structure as original"
        
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ppapikey-ipa
        path: PPAPIKey_Mobile_Project/ppapikey.ipa
        retention-days: 30
