#!/bin/bash
# Script fix l·ªói c√†i ƒë·∫∑t iOS app tr√™n iPhone th·ª±c - COMPLETE FIX

echo "üö® ƒêang fix l·ªói c√†i ƒë·∫∑t iOS app tr√™n iPhone th·ª±c..."

# 1. Clean everything completely
echo "üßπ Cleaning everything completely..."
flutter clean
rm -rf ios/Pods
rm -rf ios/Podfile.lock
rm -rf ios/.symlinks
rm -rf ios/Flutter/Flutter.framework
rm -rf ios/Flutter/Flutter.podspec
rm -rf ios/Flutter/Generated.xcconfig
rm -rf build/

# 2. Fix Info.plist v·ªõi Bundle ID m·ªõi v√† c·∫•u h√¨nh ƒë√∫ng
echo "üîß Fixing Info.plist..."
cat > ios/Runner/Info.plist << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleDisplayName</key>
	<string>PPAPIKey Mobile</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>com.ppapikey.mobile</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>ppapikey_mobile</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>1.2.2</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleVersion</key>
	<string>1</string>
	<key>LSRequiresIPhoneOS</key>
	<true/>
	<key>UILaunchStoryboardName</key>
	<string>LaunchScreen</string>
	<key>UIMainStoryboardFile</key>
	<string>Main</string>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UISupportedInterfaceOrientations~ipad</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationPortraitUpsideDown</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UIViewControllerBasedStatusBarAppearance</key>
	<false/>
	<key>CADisableMinimumFrameDurationOnPhone</key>
	<true/>
	<key>UIApplicationSupportsIndirectInputEvents</key>
	<true/>
	<key>ITSAppUsesNonExemptEncryption</key>
	<false/>
	<key>CFBundleURLTypes</key>
	<array>
		<dict>
			<key>CFBundleURLName</key>
			<string>com.ppapikey.mobile</string>
			<key>CFBundleURLSchemes</key>
			<array>
				<string>ppapikey</string>
			</array>
		</dict>
	</array>
</dict>
</plist>
EOF

# 3. Fix Runner.entitlements - minimal cho device installation
echo "üîß Fixing Runner.entitlements..."
cat > ios/Runner/Runner.entitlements << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>get-task-allow</key>
    <true/>
</dict>
</plist>
EOF

# 4. Fix Podfile v·ªõi c·∫•u h√¨nh ƒë√∫ng cho device
echo "üîß Fixing Podfile..."
cat > ios/Podfile << 'EOF'
platform :ios, '12.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['STRIP_INSTALLED_PRODUCT'] = 'YES'
      config.build_settings['COPY_PHASE_STRIP'] = 'NO'
      config.build_settings['STRIP_STYLE'] = 'all'
      config.build_settings['DEVELOPMENT_TEAM'] = ''
      config.build_settings['CODE_SIGN_IDENTITY'] = ''
      config.build_settings['CODE_SIGN_STYLE'] = 'Automatic'
    end
  end
end
EOF

# 5. Get dependencies
echo "üì• Getting dependencies..."
flutter pub get

# 6. Install iOS dependencies
echo "üçé Installing iOS dependencies..."
cd ios
pod install --repo-update
cd ..

# 7. Build for device (kh√¥ng ph·∫£i simulator)
echo "üèóÔ∏è Building for iOS Device..."
flutter build ios --debug --no-codesign

echo "‚úÖ COMPLETE FIX completed!"
echo ""
echo "üìã C√ÅC B∆Ø·ªöC TI·∫æP THEO ƒê·ªÇ C√ÄI ƒê·∫∂T TR√äN IPHONE:"
echo ""
echo "üîß PH∆Ø∆†NG PH√ÅP 1: S·ª≠ d·ª•ng Xcode (KHUY·∫æN NGH·ªä)"
echo "1. M·ªü Xcode: open ios/Runner.xcworkspace"
echo "2. Trong Xcode:"
echo "   - Ch·ªçn project 'Runner'"
echo "   - V√†o tab 'Signing & Capabilities'"
echo "   - Check 'Automatically manage signing'"
echo "   - Ch·ªçn Team c·ªßa b·∫°n (Apple Developer Account)"
echo "   - Bundle ID s·∫Ω t·ª± ƒë·ªông l√† com.ppapikey.mobile"
echo "3. K·∫øt n·ªëi iPhone v√†o m√°y t√≠nh"
echo "4. Ch·ªçn iPhone l√†m target device"
echo "5. Build v√† Run: Product ‚Üí Build ‚Üí Run"
echo ""
echo "üîß PH∆Ø∆†NG PH√ÅP 2: S·ª≠ d·ª•ng AltStore/Sideloadly"
echo "1. Build IPA: flutter build ipa --debug"
echo "2. S·ª≠ d·ª•ng AltStore ho·∫∑c Sideloadly ƒë·ªÉ c√†i ƒë·∫∑t"
echo "3. C·∫ßn Apple ID ƒë·ªÉ k√Ω app"
echo ""
echo "üîß PH∆Ø∆†NG PH√ÅP 3: S·ª≠ d·ª•ng eSign"
echo "1. Build IPA: flutter build ipa --debug --no-codesign"
echo "2. Upload IPA l√™n eSign"
echo "3. K√Ω v√† c√†i ƒë·∫∑t qua eSign"
echo ""
echo "‚ö†Ô∏è L∆ØU √ù QUAN TR·ªåNG:"
echo "1. C·∫ßn Apple Developer Account ƒë·ªÉ c√†i ƒë·∫∑t tr√™n device"
echo "2. Device ph·∫£i ƒë∆∞·ª£c trust m√°y t√≠nh"
echo "3. N·∫øu d√πng free Apple ID, app s·∫Ω h·∫øt h·∫°n sau 7 ng√†y"
echo "4. N·∫øu d√πng paid Apple ID, app s·∫Ω h·∫øt h·∫°n sau 1 nƒÉm"
echo ""
echo "üîç N·∫æU V·∫™N L·ªñI:"
echo "1. Ki·ªÉm tra Apple Developer Account c√≤n active kh√¥ng"
echo "2. Ki·ªÉm tra Certificate c√≤n h·∫°n kh√¥ng"
echo "3. Ki·ªÉm tra Provisioning Profile c√≥ ƒë√∫ng kh√¥ng"
echo "4. Ki·ªÉm tra Device UDID c√≥ trong profile kh√¥ng"
echo "5. Th·ª≠ restart Xcode v√† clean build folder"
